[{"C:\\Users\\amir\\Desktop\\not-twitter\\src\\index.js":"1","C:\\Users\\amir\\Desktop\\not-twitter\\src\\App.js":"2","C:\\Users\\amir\\Desktop\\not-twitter\\src\\views\\Home.js":"3","C:\\Users\\amir\\Desktop\\not-twitter\\src\\components\\Layout\\Layout.js":"4","C:\\Users\\amir\\Desktop\\not-twitter\\src\\components\\Header\\Header.js":"5","C:\\Users\\amir\\Desktop\\not-twitter\\src\\components\\NewTweet\\NewTweet.js":"6","C:\\Users\\amir\\Desktop\\not-twitter\\src\\components\\TextField\\TextField.js":"7","C:\\Users\\amir\\Desktop\\not-twitter\\src\\components\\Button\\Button.js":"8","C:\\Users\\amir\\Desktop\\not-twitter\\src\\components\\Divider\\Divider.js":"9","C:\\Users\\amir\\Desktop\\not-twitter\\src\\components\\Tweet\\Tweet.js":"10","C:\\Users\\amir\\Desktop\\not-twitter\\src\\components\\Modal\\Modal.js":"11","C:\\Users\\amir\\Desktop\\not-twitter\\src\\components\\ReactionPopup\\ReactionPopup.js":"12","C:\\Users\\amir\\Desktop\\not-twitter\\src\\components\\DropDownMenu\\DropDownMenu.js":"13","C:\\Users\\amir\\Desktop\\not-twitter\\src\\views\\Details.js":"14","C:\\Users\\amir\\Desktop\\not-twitter\\src\\store\\index.js":"15"},{"size":440,"mtime":1608297773390,"results":"16","hashOfConfig":"17"},{"size":367,"mtime":1608294707245,"results":"18","hashOfConfig":"17"},{"size":2671,"mtime":1608304027190,"results":"19","hashOfConfig":"17"},{"size":234,"mtime":1608124636298,"results":"20","hashOfConfig":"17"},{"size":681,"mtime":1608295984439,"results":"21","hashOfConfig":"17"},{"size":1159,"mtime":1608304163382,"results":"22","hashOfConfig":"17"},{"size":368,"mtime":1608296926149,"results":"23","hashOfConfig":"17"},{"size":389,"mtime":1608297507174,"results":"24","hashOfConfig":"17"},{"size":266,"mtime":1608110266121,"results":"25","hashOfConfig":"17"},{"size":4397,"mtime":1608304252986,"results":"26","hashOfConfig":"17"},{"size":484,"mtime":1608296006256,"results":"27","hashOfConfig":"17"},{"size":4245,"mtime":1608289877857,"results":"28","hashOfConfig":"17"},{"size":3047,"mtime":1608294134620,"results":"29","hashOfConfig":"17"},{"size":1109,"mtime":1608296212689,"results":"30","hashOfConfig":"17"},{"size":1825,"mtime":1608304027189,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1w9f51m",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\amir\\Desktop\\not-twitter\\src\\index.js",[],["64","65"],"C:\\Users\\amir\\Desktop\\not-twitter\\src\\App.js",[],"C:\\Users\\amir\\Desktop\\not-twitter\\src\\views\\Home.js",["66"],"import { useEffect } from 'react'\nimport axios from 'axios'\nimport { connect } from 'react-redux'\nimport {\n  updateUsersList,\n  updateLoggedUser,\n  updateTweetsList,\n} from '../store/index'\n\n// local data\nimport localUsers from '../data/users.json'\nimport localTweets from '../data/tweets.json'\n\nimport Layout from '../components/Layout/Layout'\nimport Header from '../components/Header/Header'\nimport NewTweet from '../components/NewTweet/NewTweet'\nimport Divider from '../components/Divider/Divider'\nimport Tweet from '../components/Tweet/Tweet'\nimport Modal from '../components/Modal/Modal'\n\nconst Home = ({ dispatch, tweets, users, loggedUser }) => {\n  const BASE_URL = process.env.REACT_APP_BASE_API_ADDRESS\n\n  useEffect(() => {\n    // fetch users list from API\n    fetchUsersList()\n    handleUpdateLoggedUser()\n    fetchTweets()\n  }, [])\n\n  const fetchUsersList = async () => {\n    try {\n      // fake fetch request\n      await axios.get(`${BASE_URL}/users/`)\n      // update users list with local data\n      dispatch(updateUsersList(localUsers))\n    } catch (e) {\n      console.log(`An error occurred white fetching users list`, e)\n    }\n  }\n\n  const handleUpdateLoggedUser = () => {\n    // in real cases logged user should be fetch and authenticated even before app loaded, for example after login, but here it's not the case so i will not send request, just update local storage and store\n    dispatch(updateLoggedUser(localUsers[0]))\n  }\n\n  const fetchTweets = async () => {\n    try {\n      // fake fetch request\n      await axios.get(`${BASE_URL}/posts/`)\n      // update tweets with local data\n      dispatch(updateTweetsList(localTweets))\n    } catch (e) {\n      console.log(`An error occurred white fetching tweets`, e)\n    }\n  }\n\n  const renderTweets = tweets.map((tweet) => {\n    // get user info\n    const user = users.find((user) => user.id === tweet.userId)\n    return <Tweet key={tweet.id} content={{ ...tweet, ...user }} />\n  })\n\n  const handleSetNewTweetText = (v) => {\n    console.log(v)\n  }\n\n  const handleSubmitNewTweet = () => {\n    console.log('wdawd')\n  }\n\n  return (\n    <>\n      <Layout>\n        <Header title=\"Home\" />\n        <NewTweet\n          text={handleSetNewTweetText}\n          onSubmit={() => handleSubmitNewTweet()}\n          avatar={loggedUser.avatar}\n        />\n        <Divider big />\n\n        {renderTweets}\n\n        <Modal title=\"Reply\">\n          <Tweet reply />\n          <NewTweet reply />\n        </Modal>\n      </Layout>\n    </>\n  )\n}\n\nconst mapStateTpProps = (state) => {\n  return {\n    users: state.users,\n    tweets: state.tweets,\n    loggedUser: state.loggedUser,\n  }\n}\n\nexport default connect(mapStateTpProps)(Home)\n","C:\\Users\\amir\\Desktop\\not-twitter\\src\\components\\Layout\\Layout.js",[],"C:\\Users\\amir\\Desktop\\not-twitter\\src\\components\\Header\\Header.js",[],"C:\\Users\\amir\\Desktop\\not-twitter\\src\\components\\NewTweet\\NewTweet.js",[],"C:\\Users\\amir\\Desktop\\not-twitter\\src\\components\\TextField\\TextField.js",[],"C:\\Users\\amir\\Desktop\\not-twitter\\src\\components\\Button\\Button.js",[],"C:\\Users\\amir\\Desktop\\not-twitter\\src\\components\\Divider\\Divider.js",[],"C:\\Users\\amir\\Desktop\\not-twitter\\src\\components\\Tweet\\Tweet.js",[],"C:\\Users\\amir\\Desktop\\not-twitter\\src\\components\\Modal\\Modal.js",[],"C:\\Users\\amir\\Desktop\\not-twitter\\src\\components\\ReactionPopup\\ReactionPopup.js",[],"C:\\Users\\amir\\Desktop\\not-twitter\\src\\components\\DropDownMenu\\DropDownMenu.js",[],"C:\\Users\\amir\\Desktop\\not-twitter\\src\\views\\Details.js",[],"C:\\Users\\amir\\Desktop\\not-twitter\\src\\store\\index.js",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":29,"column":6,"nodeType":"73","endLine":29,"endColumn":8,"suggestions":"74"},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchTweets', 'fetchUsersList', and 'handleUpdateLoggedUser'. Either include them or remove the dependency array.","ArrayExpression",["77"],"no-global-assign","no-unsafe-negation",{"desc":"78","fix":"79"},"Update the dependencies array to be: [fetchTweets, fetchUsersList, handleUpdateLoggedUser]",{"range":"80","text":"81"},[827,829],"[fetchTweets, fetchUsersList, handleUpdateLoggedUser]"]